@page "/weather"
@rendermode InteractiveServer

@inject Blazor_In_Insiders.Services.MongoDbService MongoDbService

<PageTitle>User Logins</PageTitle>

<h1 class="display-6 mb-4 fw-bold text-primary text-center">User Login Details</h1>

<button class="btn btn-secondary mb-3" @onclick="RefreshUserLogins">Refresh</button>

@if (userLogins == null)
{
    <p>Loading...</p>
}
else if (!userLogins.Any())
{
    <p>No user logins found.</p>
}
else
{
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>SR No</th>
                <th>Email</th>
                <th>Password</th>
                <th>Login Date</th>
                <th>Login Time</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var login in userLogins.Select((x, i) => new { x, i }))
            {
                <tr>
                    <td>@(login.i + 1)</td>
                    <td>@login.x.Email</td>
                    <td>@login.x.PasswordHash</td>
                    <td>@login.x.LoginDate.ToLocalTime().ToString("dd-MM-yyyy")</td>
                    <td>@login.x.LoginDate.ToLocalTime().ToString("hh:mm:ss tt")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Blazor_In_Insiders.Models.UserLogin>? userLogins;

    protected override async Task OnInitializedAsync()
    {
        await LoadUserLogins();
    }

    private async Task LoadUserLogins()
    {
        userLogins = await Blazor_In_Insiders.Services.UserLoginService.GetAllUserLoginsAsync(MongoDbService);
    }

    private async Task RefreshUserLogins()
    {
        await LoadUserLogins();
        StateHasChanged();
    }
}
